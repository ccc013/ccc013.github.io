<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Cai's blog]]></title>
  <subtitle><![CDATA[Stay hungry, stay foolish]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://ccc013.github.io/"/>
  <updated>2016-01-26T08:44:11.460Z</updated>
  <id>http://ccc013.github.io/</id>
  
  <author>
    <name><![CDATA[cai]]></name>
    <email><![CDATA[429546420@qq.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[hexo博客的优化与配置]]></title>
    <link href="http://ccc013.github.io/2016/01/26/hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BC%98%E5%8C%96%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://ccc013.github.io/2016/01/26/hexo博客的优化与配置/</id>
    <published>2016-01-26T08:22:04.000Z</published>
    <updated>2016-01-26T08:44:11.460Z</updated>
    <content type="html"><![CDATA[<p>#目录</p>
<p><a href="/#01">1. 添加统计代码</a></p>
<p></p><h3 id="01">1. 添加统计代码</h3><br>上周成功用Hexo+Github Pages搭建好博客，但是还有很多功能等待添加的,今天就继续进行优化，首先是添加统计代码，数据统计方面有以下几个:<p></p>
<ol>
<li><a href="http://www.google.com/analytics/web/?hl=zh-CN" target="_blank" rel="external">Google Analytics</a></li>
<li><a href="http://tongji.baidu.com/web/welcome/login" target="_blank" rel="external">百度统计</a></li>
<li><a href="http://busuanzi.ibruce.info/" target="_blank" rel="external">不蒜子</a></li>
</ol>
<p>然后就是站长工具:</p>
<ol>
<li><a href="http://zhanzhang.cnzz.com/" target="_blank" rel="external">CNZZ|站长统计</a></li>
<li><a href="http://www.google.com/intl/zh-CN/webmasters" target="_blank" rel="external">谷歌站长工具</a></li>
<li><a href="http://zhanzhang.baidu.com/" target="_blank" rel="external">百度站长工具</a></li>
<li><a href="http://tool.chinaz.com/" target="_blank" rel="external">站长之家工具</a></li>
<li><a href="http://zhanzhang.so.com/" target="_blank" rel="external">360搜索站长平台</a></li>
</ol>
<p>感觉站长工具会比较详细点，所以就采用站长工具，用的是cnzz的，参考了<a href="http://blog.csdn.net/whjkm/article/details/37884563" target="_blank" rel="external">hexo博客的优化与配置——添加统计代码</a>.</p>
<p>首先在<code>\theme\yilia\_config.yml</code>添加一行代码:</p>
<pre><code>#### Analytics
cnzz: true
</code></pre><p>这里我用的是<strong>yilia</strong>主题。</p>
<p>登录<a href="http://zhanzhang.cnzz.com/" target="_blank" rel="external">CNZZ</a>中，注册，添加网站，然后会得到代码，选择想要显示的形式，可以只是文字形式，也可以是图表形式，复制给出的代码，然后在<code>\theme\yilia\layout\_partial</code>里面创建一个<strong>cnzz.ejs</strong>文件，把刚刚复制的代码添加进去:</p>
<pre><code>&lt;% if (theme.cnzz){ %&gt; 
&lt;script type=&quot;text/javascript&quot;&gt;
    var cnzz_protocol = ((&quot;https:&quot; == document.location.protocol) ? &quot; https://&quot; : &quot; http://&quot;);
    document.write(unescape(&quot;%3Cspan id=&apos;cnzz_stat_icon_1257376919&apos;%3E%3C/span%3E%3Cscript src=&apos;&quot; + cnzz_protocol + &quot;s11.cnzz.com/z_stat.php%3Fid%3D1257376919&apos; type=&apos;text/javascript&apos;%3E%3C/script%3E&quot;));
&lt;/script&gt; 
&lt;% } %&gt;
</code></pre><p>主要是替代这段代码中第二行<strong>&lt;script </strong>开始到倒数第二行的<strong></strong>。</p>
<p>最后在after_footer.ejs（或者footer，或head，可以自己选择需要出现站长统计的位置）的后面添加一行代码即可:</p>
<pre><code>&lt;%- partial(&apos;cnzz&apos;) %&gt; 
</code></pre><p>这样就可以了，然后就执行<code>hexo generate</code>,<code>hexo deploy</code>发布网站即可。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>#目录</p>
<p><a href="/#01">1. 添加统计代码</a></p>
<p></p><h3 id="01">1. 添加统计代码</h3><br>上周成功用Hexo+Github Pages搭建好博客，但是还有很多功能等待添加的,今天就继续进行优化，首先是添]]>
    </summary>
    
      <category term="Hexo" scheme="http://ccc013.github.io/tags/Hexo/"/>
    
      <category term="技术" scheme="http://ccc013.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015总结 & 2016展望]]></title>
    <link href="http://ccc013.github.io/2016/01/21/2015%E6%80%BB%E7%BB%93-2016%E5%B1%95%E6%9C%9B/"/>
    <id>http://ccc013.github.io/2016/01/21/2015总结-2016展望/</id>
    <published>2016-01-21T10:07:05.000Z</published>
    <updated>2016-01-21T10:11:28.788Z</updated>
    <content type="html"><![CDATA[<p>2015年过去了，2016年开始了。<br><strong>2015 总结</strong><br>    回首2015，最大的变化就是从本科到研究生，上半年本科毕业了，下半年则是继续读研，当然还是在本校读研，学院也还是本学院，至于专业还是有所改变了，现在是属于计算机视觉方向，简单说就是做图像识别，说得高大上点就是机器学习，或者是深度学习了。<br>    学习方面，学业方面，在本学期开学初还是有好好去了解机器学习的知识的，买了《统计学习方法》这本书，但是也只是看了前面几章，后面就因为时间关系，也是计划的调整没有看下去了，这本书主要是机器学习的一些知识；同时对linux系统有了点了解，毕竟为了使用Caffe这个框架，必须对linux系统有点了解，所以开学初也是安装了至少5次ubuntu系统，中间还换过一次主机，显示屏，所以还安装过一次win8系统，然后也了解几条linux系统的命令行命令，不过在11月底12月用linux系统用得有点少了；<br>    编程方面，本科毕设需要写一个android的应用，所以有了解基本的java知识，android也是看完《第一行代码》这本书，算是入门了，但是也是在不断探索如何学习可以掌握得更好，可以更好提高自己的水平，毕竟感觉对很多知识还是了解，还没怎么用过，最多就是在看书的时候有跟着敲下书上的代码，比如网络连接，图片加载的知识，动画，一些View的应用，如现在最新的material design的一些控件等等，本来打算要好好看看谷歌官方的training文档和guide文档，但是发现单纯看文档不写，掌握得不够好，所以打算开始写一个小应用，可以熟悉下自己不熟悉的一些知识点，同时在这个过程再去查看官方文档，总结下，做点笔记，这样可能是比较适合自己的学习方法；<br>    除了学习android，在暑假也是学习了python，这是看<a href="http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000" target="_blank" rel="external">廖雪峰老师的python教程</a>，安装了2.7和3.4版本的python，用sublime Text3这个编辑器，在开学后也是断断续续有用过，但是基本只是进行简单的文本操作，比如将一个文件夹中的文件名写到一个txt文件中，还有就是使用了opencv和PIL这两个第三方库对图片进行一些如调整大小的操作，还有就是学习了下爬虫，用selenium这个第三方库，跟着网上的教程写了一个爬百度图片的代码，总体上，还是属于入门的阶段，还没有很深入了解。<br>    在开学后，应该是10月份吧，开始看《C++ primer plus》，这是本应该去年就买的书，但是一直都没有看，但是看到师兄师姐都是有学这个，在同学提醒，如果以后要修改Caffe框架的代码，还是要懂C++的，所以也是开始学习，用Visual Studio 2013来编写，实际上也就是10-11月两个月有看，12月就因为各种原因暂时搁置了，目前也是总共看了13章的内容，还有5章内容，打算期末考试后，还是要重新看的。<br>    在看书方面，其实还是看得比较少，相反买书倒是比较多…看完的书有《Android编程权威指南》，这是在有3个月没有看android但是又要重新开始的时候，看的一本书，是外国人写的，中文版，首先是接触到一个MVC的架构，当然最近流行的是MVP架构，但我还没有好好去了解这个，有空要好好看看，其次就是它提倡的尽可能多用Fragment，因为看完也是有好几个星期，所以也就剩下这两个印象了。。这也暴露了没有好好做学习笔记以及做总结的坏习惯，所以2016年要努力养成做学习笔记，读书总结的好习惯才行！<br>    至于看过的书，还有就是《python基础教程》，这本书其实看得差不多了，前面教程都看了，就是后面实战例子没有看；<br>    入手的新书，除了上面提到的《统计学习方法》，android方面的有《Android群英传》，《Android开发艺术探索》，但这两本感觉是进阶的书籍，所以我是打算看完官方文档再好好看看的，还有就是《C++ primer》，这是英文版的，也打算挑战下自己吧，还有就是《编程之美》，《现代操作系统》，希望2016年可以看完至少一半的书吧。<br>    至于网上下载的电子书就更多了。。</p>
<p>   生活方面，去年辛苦减掉的几公斤体重就在11月底去深圳的时候，两天，两顿KFC的全家桶中给补回来了，加上12月入冬，缺乏锻炼，体重也是又回到70了，果然，锻炼身体，减脂增肌依然是2016的主题之一。<br>    旅游方面，6月底去了香港，澳门，这算是第一次出省游了，希望2016年也能再出省玩一次。</p>
<p><strong>2016 展望</strong><br>    对于2016年，首先学业上，当然是不挂科，同时尽量得高分啦，至少都有80分以上啦，奖学金希望是保三争二有一就是非常好了。。<br>    努力完成任务，不要让老板生气了；完成下跟同学的那个水表识别的任务，能发篇专利，有可能发论文也是好的。<br>    编程方面，android要好好学习，完成下想做的应用，一个跟阅读有关的应用，一个跟NBA相关的应用，水平能上一个层次，希望看完买的两本书和官方的training和guide文档，然后能有机会做一两个实际的项目，估计也是要看下java的书，巩固下java基础；<br>    C++是要看完买的两本书，至少是《C++ primer plus》，然后要看下数据结构和算法，也就是《大话数据结构》，还有就是看《现代操作系统》，如果有时间就看看《算法导论》吧，以及linux系统的知识；<br>    python呢，打算在写android的时候，用python来做下后台服务，也算是对python的一个应用，了解怎么用python写后台的。</p>
<p>   生活方面，当然是要多看书，做读书笔记，不过估计大部分的书都是上面提到的书了，另外就是多锻炼，或者是要学会健身，希望练出腹肌，身材更好，大腿小腿可以更瘦点！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>2015年过去了，2016年开始了。<br><strong>2015 总结</strong><br>    回首2015，最大的变化就是从本科到研究生，上半年本科毕业了，下半年则是继续读研，当然还是在本校读研，学院也还是本学院，至于专业还是有所改变了，现在是属于计算机视觉方]]>
    </summary>
    
      <category term="总结" scheme="http://ccc013.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="随笔" scheme="http://ccc013.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio 安装配置问题总结]]></title>
    <link href="http://ccc013.github.io/2016/01/20/Android%20Studio%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>http://ccc013.github.io/2016/01/20/Android Studio 安装配置问题总结/</id>
    <published>2016-01-20T13:06:54.000Z</published>
    <updated>2016-01-21T10:02:03.528Z</updated>
    <content type="html"><![CDATA[<p>  之前一直都是使用Eclipse写Android的，但一直都有听说Android Studio是一个更好的用于开发Android的软件，之前其实也有保存过一些别人写的安装和配置Android Studio的一些教程，在这里也列出来：<br><a href="http://www.jianshu.com/p/36cfa1614d23" target="_blank" rel="external">Android Studio 入门指南</a>；<br><a href="http://android.jobbole.com/77635/" target="_blank" rel="external">Eclipse，到了说再见的时候了——Android Studio最全解析</a><br><a href="http://stormzhang.com/devtools/2014/11/25/android-studio-tutorial1/" target="_blank" rel="external">Android Studio系列教程一–下载与安装</a><br>另外，还有一个比较详细的介绍配置的博文系列：<br><a href="http://www.cnblogs.com/smyhvae/p/4390905.html" target="_blank" rel="external">第一次使用Android Studio时你应该知道的一切配置</a><br><a href="http://www.cnblogs.com/smyhvae/p/4392611.html" target="_blank" rel="external">第一次使用Android Studio时你应该知道的一切配置（二）：新建一个属于自己的工程并安装Genymotion模拟器</a><br><a href="http://www.cnblogs.com/smyhvae/p/4456420.html" target="_blank" rel="external">第一次使用Android Studio时你应该知道的一切配置（三）：gradle项目构建</a></p>
<p>在这里就总结下我安装的过程中遇到的一些问题吧，首先我是从<a href="https://github.com/inferjay/AndroidDevTools#sdk-tools" target="_blank" rel="external">SDK Tools - AndroidDevTools</a><br>这里下载的，毕竟尚未使用过翻墙软件，而且这个Github里面也分享了很多有关Android开发过程中使用到的一些工具，软件，还有一些电子书，资料非常齐全。</p>
<p>安装完成后，遇到几个问题，分别如下：</p>
<ol>
<li><p>首先第一个问题是弹出一个对话框，提示the environment variable JAVA_HOME(with the value of “F:\Java\JDK\” ) does not point to a valid JVM installation.<br>“F:\Java\JDK\”这是我安装jdk的文件路径<br>这个问题上网搜索了好久，有的说需要在JDK\后面加“；”，有的说去掉“\”，反正试了这几个都不行，我干脆就直接去掉“JDK\”,发现这个问题居然解决了….</p>
</li>
<li><p>在解决了第一个问题后，马上就出现第二个问题了，又弹出一个对话框显示以下这段文字：<br>‘ tools.jar’ seems to be not in Android Studio classpath.Please ensure JAVA_HOME points to JDK rather than JRE.”</p>
</li>
</ol>
<p>百度了这个问题，根据<a href="http://jingyan.baidu.com/article/ce4366491d06343773afd3cc.html" target="_blank" rel="external">‘tools.jar’seems to be not in Android Studio</a><br>这里给出的一些建议解决了问题，我主要是将jdk和jre分开了，并且没有设置SDK的环境变量，将这两个问题解决完后，就可以使用Android Studio了！</p>
<p>2015-12-24 补充<br>  因为换了新电脑，并且使用了win10的系统，所以需要重新安装java jdk，android sdk以及android studio，所以就在这再补充下前面安装配置jdk和sdk中遇到的问题。</p>
<p>首先是jdk，按照这个<a href="http://jingyan.baidu.com/article/fea4511a12b158f7bb9125b9.html" target="_blank" rel="external">如何在WIN10搭建Java开发环境</a>，在官网上下载jdk，安装，然后配置环境变量，但是在验证是否安装配置成功的时候，发现输入“java”是成功的，但是输入“javac”命令时，却提示了不是内部环境变量，但是在jdk的bin文件夹中是存在javac.exe这个文件，所以应该是配置环境变量中path的出问题了，当然我是按照上面教程中输入路径的，但是win10提供了浏览这个选项，通过这个找到要配置的文件路径，发现就成功解决这个问题了。<br><img src="http://img.blog.csdn.net/20151224205331635" alt="这里写图片描述"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>  之前一直都是使用Eclipse写Android的，但一直都有听说Android Studio是一个更好的用于开发Android的软件，之前其实也有保存过一些别人写的安装和配置Android Studio的一些教程，在这里也列出来：<br><a href="http://]]>
    </summary>
    
      <category term="Android" scheme="http://ccc013.github.io/tags/Android/"/>
    
      <category term="Android Studio" scheme="http://ccc013.github.io/tags/Android-Studio/"/>
    
      <category term="技术" scheme="http://ccc013.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo+github pages 搭建博客总结]]></title>
    <link href="http://ccc013.github.io/2016/01/20/hexo+github%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%80%BB%E7%BB%93/"/>
    <id>http://ccc013.github.io/2016/01/20/hexo+github 搭建博客总结/</id>
    <published>2016-01-20T08:49:44.000Z</published>
    <updated>2016-01-22T02:41:07.464Z</updated>
    <content type="html"><![CDATA[<h1 id="1-_u524D_u8A00"><a href="#1-_u524D_u8A00" class="headerlink" title="1.前言"></a>1.前言</h1><p>   一直都希望能自己搭建个博客出来，所以在考完试后，也是从网上参考了很多用hexo+github pages搭建博客的文章，折腾了一天多，中间也是出现了一些问题，有一些还是暂时没有解决的问题。</p>
<p>   在搭建之前要对所用到的工具框架有个了解：</p>
<ul>
<li><a href="http://git-scm.com/book/zh/v2" target="_blank" rel="external">Git</a></li>
<li><a href="https://github.com/" target="_blank" rel="external">Github</a></li>
<li><a href="https://pages.github.com/" target="_blank" rel="external">Github Pages</a></li>
<li><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a></li>
<li><a href="http://wowubuntu.com/markdown/basic.html" target="_blank" rel="external">Markdown</a></li>
</ul>
<p>此外，在搭建过程中参考的文章有:<br>1.<a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">hexo你的博客</a><br>2.<a href="http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/" target="_blank" rel="external">GitHub-Pages-Hexo搭建博客</a><br>3.<a href="http://zipperary.com/categories/hexo/" target="_blank" rel="external">Hexo系列教程</a><br>4.<a href="http://wsgzao.github.io/post/hexo-guide/#准备工作" target="_blank" rel="external">使用GitHub和Hexo搭建免费静态Blog</a></p>
<h1 id="2-_u914D_u7F6EHexo"><a href="#2-_u914D_u7F6EHexo" class="headerlink" title="2.配置Hexo"></a>2.配置Hexo</h1><p>   首先查看Hexo的文档了解了Hexo的基本概念以及如何安装，当然还有使用的方法。</p>
<p>   Hexo官方文档（<a href="https://hexo.io/zh-cn/docs/index.html）" target="_blank" rel="external">https://hexo.io/zh-cn/docs/index.html）</a></p>
<p>（所以下面会有一大段是摘自官方文档的，当做笔记记录下）</p>
<p>  <strong>Hexo</strong></p>
<p>   Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页</p>
<p>###(1)安装前提</p>
<p>安装Hexo的官方文档，需要安装有下面两个应用程序：</p>
<ul>
<li><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></li>
<li><a href="http://git-scm.com/" target="_blank" rel="external">Git</a></li>
</ul>
<p><strong>安装Node.js</strong><br>我使用的是从<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a>上下载安装，另一种安装方法是<a href="https://github.com/creationix/nvm" target="_blank" rel="external">nvm</a></p>
<p><strong>安装Git</strong><br>我是使用官方版本的安装<a href="https://git-scm.com/download/win" target="_blank" rel="external">Git</a>,当然也是由于我是在win10上配置的，所以会选择这种方式，另外，还有一种安装方式：<a href="https://desktop.github.com/" target="_blank" rel="external">GitHub for Windows</a></p>
<p>如果是linux的话，就直接一行命令搞定了:</p>
<p>(Ubuntu,Debian):<br><code>sudo apt-get install git-core</code></p>
<p>(Fedora,Red Hat,CentOS):<br><code>sudo yum install git-core</code></p>
<p>Mac：使用<a href="http://brew.sh/" target="_blank" rel="external">Homebrew</a>,<a href="http://www.macports.org/" target="_blank" rel="external">MacPorts</a> 或下载 <a href="http://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="external">安装程序</a> 安装。</p>
<p><strong>Git配置以及使用</strong><br>有关Git的配置以及如何使用，我初学的时候，是根据<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001373962845513aefd77a99f4145f0a2c7a7ca057e7570000" target="_blank" rel="external">廖雪峰老师的Git教程</a>，这个教程简单易懂，看完是基本能懂得如何使用Git，并且教程还有教如何添加远程仓库，也就是Github，也就是如何关联一个远程仓库。</p>
<p>相关的一些资料：</p>
<ul>
<li><a href="http://backlogtool.com/git-guide/cn/intro/intro1_1.html" target="_blank" rel="external">猴子都能懂得GIT入门</a></li>
<li><a href="http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/" target="_blank" rel="external">Git Magic</a></li>
<li><a href="http://www.jianshu.com/p/25647b9920b7" target="_blank" rel="external">Git 资源整理</a></li>
<li><a href="http://bach-dream.iteye.com/blog/1325159" target="_blank" rel="external">Github使用（一）生成本地项目上传</a></li>
<li><a href="http://wustrive2008.github.io/2016/01/06/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/Git%E5%85%A8%E8%A7%A3%E6%9E%90%E4%B9%8B%E5%85%88%E7%94%A8%E8%B5%B7%E6%9D%A5/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="external">Git全解析之用起来先</a>,这个教程有附带一个关于git的知识结构图,如下所示:</li>
</ul>
<p><img src="http://7xifb5.com1.z0.glb.clouddn.com/wustrive-hexogit%E7%9F%A5%E8%AF%86%E7%BB%93%E6%9E%84.png" alt="git image"></p>
<p><strong>Github</strong><br>• 首先要注册一个Github的账号<br>• 建立一个与用户名对应的仓库，即仓库名为[your_user_name.github.com]或者[your_user.name.github.io]<br>• 添加SSH公钥到 Account settings -&gt; SSH Keys -&gt; Add SSH Key<br>关于添加SSH公钥的可以参考以下资料:<br><a href="https://help.github.com/articles/generating-ssh-keys/" target="_blank" rel="external">Generating SSH keys</a><br><a href="https://help.github.com/articles/error-permission-denied-publickey/" target="_blank" rel="external">Error: Permission denied (publickey)</a></p>
<p>###(2)Hexo的安装和使用</p>
<p>####安装</p>
<p>安装上面两个必须的应用程序后，就可以使用npm安装Hexo:<br><code>$ npm install -g hexo-cli</code></p>
<p>####使用</p>
<p>安装完成后，可以使用如下命令初始化:<br><code>$ hexo init &lt;folder&gt;</code><br><code>$ cd &lt;folder&gt;</code><br><code>$ npm install</code></p>
<p>当然也可以先直接进入需要使用Hexo的文件夹，执行:<br><code>$ hexo init</code><br><code>$ npm install</code></p>
<p>初始化后的结果，就是在指定文件夹中，目录如下:</p>
<pre><code>.
├── _config.yml
    ├── package.json
├── scaffolds
├── source
|   ├── _drafts
|   └── _posts
└── themes
</code></pre><p>其中，source_posts 文件夹就是存放博客的文章，也就是.md文件</p>
<p>_config.yml是配置文件，主要是对这个文件进行配置，比如博客的名字，菜单显示，使用的主题等</p>
<p>scaffolds文件夹是模板文件夹，新建文章的时候，Hexo会根据它来建立文件</p>
<p>themes文件夹就是主题文件，Hexo会根据主题来生成静态页面，在Hexo中可以使用的主题是有很多的，可以从<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">Themes</a>上选择自己喜欢的主题，更换主题需要将根目录下的<strong>_config.yml</strong>文件中的<code>theme:Landscape</code>更改成<code>theme:your_theme</code>,其中，<strong>Landscape</strong>是默认的主题</p>
<p><strong>本地浏览</strong><br>在执行下列命令后，就可以在浏览器中输入<code>localhost:4000</code>进行本地的浏览：</p>
<pre><code>$ hexo generate
$ hexo server
</code></pre><p><strong>但是在这步，我是一直都不成功，无论是输入<code>localhost:4000</code>,<code>127.0.0.1:4000</code>,这个问题我是百度了很久，发现在hexo的github的issue有人有同样的问题–<a href="https://github.com/hexojs/hexo/issues/1568" target="_blank" rel="external">win10系统hexo s以后http://localhost:4000打不开本地服务器 #1568</a>，现在这个问题我也是还没有搞明白为什么。</strong></p>
<p>虽然无法本地浏览，但是这也不是什么大问题，最终还是要部署在Github Pages上的</p>
<p>###(3)部署到Github</p>
<p>在部署到GitHub前，需要安装一个插件:<br><code>$ npm install hexo-deployer-git --save</code><br>然后就修改根目录下的_config.yml文件中的:</p>
<pre><code># Deployment
## Docs: https://hexo.io/docs/deployment.html
deploy:
type:
</code></pre><p>修改后的结果是：</p>
<pre><code>deploy:
 type: git
 repo: git@github.com:ccc013/ccc013.github.io.git
 branch: master
</code></pre><p><strong>repo</strong>是填写对应仓库的SSH地址<br>然后执行下列命令即可：</p>
<pre><code>$ hexo generate
$ hexo deploy
</code></pre><p>或者是<code>hexo deploy -g</code>也是同样的效果，然后就可以在浏览器中输入username.github.io进行浏览</p>
<p>但是这样在Github中的文件就是通过命令<code>hexo generate</code>生成的网站文件，而初始化生成的文件还是在本地电脑中的，也就是原始的文章是没有上传到Github的，这样如果更换了机器就不能继续修改你的博客了。</p>
<p>所以是希望在Github上可以保存原来的文章文件，这个方法呢，很多人都是用到的，就是在Github上建立分支了，比如建立一个hexo分支，然后设置它为默认分支，设置方法在<strong>Settings-&gt;Branches</strong>中</p>
<p>这个过程我初始是按照<a href="http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/" target="_blank" rel="external">GitHub-Pages-Hexo搭建博客</a>中来做的，但是在输入<code>hexo init</code>后，就会发现一开始<code>git clone</code>下来的文件中的.git文件没有了，并且之后也是无法<code>git push</code>到自己的github上，总是显示被拒绝的提示，本来我都是打算再建立一个仓库来存放文章了，但是后来又在上网搜索，看到这篇文章<a href="http://www.xrpmoon.com/blog/archives/jripple1281.html" target="_blank" rel="external">如何使用Hexo在Github上搭建自己的博客</a>中发布到github page的时候，就想自己应该是在本地的时候也是要新建一个同样名为hexo的分支，然后<code>git commit</code>到这个分支，于是就这么做，没想到真的成功了！</p>
<p>###(4)博客管理流程<br>所以现在对博客的修改就是如同<a href="http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/" target="_blank" rel="external">GitHub-Pages-Hexo搭建博客</a>中说得一样:<br><strong>日常修改</strong></p>
<ol>
<li>在本地修改博客，如添加新的博文，修改样式等；</li>
<li>在hexo分支下，依次执行<code>git add .</code>,<code>git commit -m &quot;...&quot;</code>,<code>git push origin hexo</code>,将改动push到GitHub上；</li>
<li>再执行<code>hexo deploy -g</code>,发布网站到master分支上。</li>
</ol>
<p><strong>更换电脑或者本地资料丢失</strong><br>1.使用 <code>git clone git@github.com:ccc013/ccc013.github.io.git</code> 拷贝仓库；<br>2.在本地拷贝下来的ccc013.github.io文件夹中通过Git bash依次执行下列命令：</p>
<pre><code>npm install hexo
npm install
npm install hexo-deployer-git
</code></pre><p>这里就不需要<code>hexo init</code>这个命令</p>
<p>###(5)Markdown知识点总结</p>
<p><strong>生成md文件</strong><br>命令<code>hexo new &quot;文件名&quot;</code>就可以生成一个md文件，然后就可以开始写文章，但是这里用到Markdown的语法，同时我们也需要一个专门可以用来写markdown的工具。</p>
<p>这个工具，我使用的是<a href="http://www.sublimetext.com/3" target="_blank" rel="external">sublime text 3</a>,这是一个文本编辑器，可以支持多种编程语言和文件格式，当然也就包括Markdown语法，具体配置方法可以参考如下:<br><a href="http://zh.lucida.me/blog/sublime-text-complete-guide/" target="_blank" rel="external">Sublime Text 全程指南</a>,<br><a href="https://github.com/jikeytang/sublime-text" target="_blank" rel="external">Sublilme Text 资源整理</a><br><a href="http://blog.saymagic.cn/2015/06/20/write-blog-by-sublime.html" target="_blank" rel="external">Sublime进阶使用</a></p>
<p>这个工具还是非常强大的，之前是我用来写python的，现在搭建博客后，就可以用来写Markdown的文件了。</p>
<p><strong>Markdown语法</strong><br>具体的可以参考<a href="http://wowubuntu.com/markdown/index.html#code" target="_blank" rel="external">Markdown 语法说明</a></p>
<p>这里就记录下暂时用得比较多的：</p>
<p><strong>标题</strong><br><code>=</code>,<code>-</code> 分别表示最高阶和第二阶标题，这两种是在文字下一行插入；</p>
<p>在行首插入1到6个<code>#</code> 分别对应标题1到6</p>
<p><strong>段落和换行</strong><br>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p>
<p><strong>列表</strong><br>无序列表使用星号、加号或者减号，而有序列表是数字加一个英文句点<code>.</code> </p>
<p><strong>代码和代码区块</strong><br>使用一个反引号``可以得到代码，而代码区块是每行缩进4个空格或者一个制表符，也就是键盘上的Tab键，当然首先跟上一行要隔着一个空行才行。</p>
<hr>
<p><strong>分隔线</strong><br>在一行中使用三个以上的星号、减号、底线来建立一个分隔线，行中不能有其他东西。</p>
<p><strong>链接</strong><br>用的比较多的是行内式，也就是一个方括号<code>[]</code>后面加一个括号<code>()</code>,括号中是链接地址，而方括号中可以是网址的标题，或者对你对网址内容的简单总结</p>
<p><strong>强调</strong><br>一个<code>*</code>或者<code>_</code>包围的文字是斜体的效果，而两个<code>*</code>或者<code>_</code>包围则是强调的效果</p>
<p><strong>图片</strong><br>格式如下：</p>
<pre><code>![image](/path/img.jpg)
![image](/path/img.jpg &quot;title&quot;)
</code></pre><p>方括号中是图片的替代文字，而第二种写法中最后的引号内容是可以选择的标题文字</p>
<p><strong>锚的使用</strong><br>使用命名锚，我们就可以创建目录，点击目录就可以跳至该命名锚，也就是同一个页面中某个小节的位置。</p>
<p>一开始是根据markdown的语法，但是发现并没有实现这个功能，后来搜索了下，根据<a href="http://ju.outofmemory.cn/entry/115045" target="_blank" rel="external">markdown中命名锚</a>中给出的方法，也就是使用html的语法，也就是目录使用，比如<code>[Overview](#overview)</code>,而在命名锚所要到的位置，使用如<code>&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;</code>,主要是<strong>id</strong>属性来命名锚，这样点击目录中的Overview,就会跳至<code>&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;</code>处了。</p>
<p>#3.总结</p>
<p>从昨天，也就是1月20号弄了一天，但是并没有解决如何在Github上存放原始文章文件，今天下午则是找到解决方法，并且成功解决了，然后写下这篇总结。</p>
<p>目前完成的也只是比较简单的内容，还有很多内容可以增加，此外搭建这个博客的本意是促使自己可以多总结多写博客，最终的目的是要掌握好学到的技术知识，所以现在仅仅是一个准备动作，最多也就是迈出一小步了，还需要自己不断坚持，不断学习，不断努力！</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="1-_u524D_u8A00"><a href="#1-_u524D_u8A00" class="headerlink" title="1.前言"></a>1.前言</h1><p>   一直都希望能自己搭建个博客出来，所以在考完试后，也是从网上参考了很多用hexo]]>
    </summary>
    
      <category term="Git" scheme="http://ccc013.github.io/tags/Git/"/>
    
      <category term="Github" scheme="http://ccc013.github.io/tags/Github/"/>
    
      <category term="Hexo" scheme="http://ccc013.github.io/tags/Hexo/"/>
    
      <category term="Markdown" scheme="http://ccc013.github.io/tags/Markdown/"/>
    
      <category term="技术" scheme="http://ccc013.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>
